#! /usr/bin/perl -w
#
 use List::Util qw( min max );


$numargs = @ARGV;

if($numargs != 4){
    die "usage: convert_to_lammps.pl cgk.dat mass.dat cg.xyz output.data\n";
} 


$CGK = shift(@ARGV);
$massfile = shift(@ARGV);
$coord = shift(@ARGV);
$outfile = shift(@ARGV);

# Read in bond constant output from enm code
open (IN, "$CGK") || die "can't find cg bond constant file\n";
$ibond = 0;
while (<IN>)
{
     @line = split;
     $endA[$ibond]=$line[0];
     $endB[$ibond]=$line[1];
     $k[$ibond] = $line[3];
     $d_0[$ibond] =$line[2];
     $ibond++;
}

close (IN);


# Read in xyz coordinate file
open (IN, "$coord") || die "can't find coordinate file\n";
$lineNum = 0;
while (<IN>)
{
    if ($lineNum >= 2){
        @line = split;
        $x[$lineNum-2]=$line[1];
        $y[$lineNum-2]=$line[2];
        $z[$lineNum-2]=$line[3];
    } 
    $lineNum++;
}
close (IN);

$minC[0] = min @x;
$minC[1] = min @y;
$minC[2] = min @z;

$maxC[0] = max @x;
$maxC[1] = max @y;
$maxC[2] = max @z;


$minAll = min @minC;
$maxAll = max @maxC;


# Read in masses of beads
open (IN, "$massfile") || die "can't find mass file\n";
$ibond = 0;
while (<IN>)
{
    @line = split;
    $masses[$ibond]=$line[1];
    $ibond++;
}
close (IN);

##########################################
#########################################
# Write Lammps Data File
open (LMPDATA, ">$outfile") || die "can't open henm.lammps.data for writing\n";

my $lenArr = scalar(@masses);

printf LMPDATA ("#Lammps data file generated by hENM\n");
printf LMPDATA ("%4d\t atoms\n", scalar(@masses));
printf LMPDATA ("%4d\t bonds\n\n\n", scalar(@k));

printf LMPDATA ("%4d\t atom types\n", scalar(@masses));
printf LMPDATA ("%4d\t bond types\n\n\n", scalar(@k));

printf LMPDATA ("%8.4f\t %8.4f xlo xhi\n", $minAll, $maxAll);
printf LMPDATA ("%8.4f\t %8.4f ylo yhi\n", $minAll, $maxAll);
printf LMPDATA ("%8.4f\t %8.4f zlo zhi\n\n", $minAll, $maxAll);

printf LMPDATA ("Masses\n\n");

for ($i=0; $i<@masses; $i++) {
    printf LMPDATA ("%4d\t %8.4f\n", $i+1, $masses[$i]);
}

printf LMPDATA ("\nBond Coeffs\n\n");

for ($i=0; $i<@k; $i++){
    printf LMPDATA ("%4d %8.4f %8.4f\n", $i+1, $k[$i]/2.0, $d_0[$i]);

}

printf LMPDATA ("\nAtoms\n\n");

for ($i=0; $i<@x; $i++){
    printf LMPDATA ("%4d %4d %4d 0.000  %8.4f %8.4f %8.4f\n", $i+1, 1, $i+1, $x[$i], $y[$i], $z[$i]);

}  

printf LMPDATA ("\nBonds\n\n");

for ($i=0; $i<@k; $i++){
    printf LMPDATA ("%4d %4d %4d %4d\n", $i+1, $i+1, $endA[$i], $endB[$i]);

}  


printf LMPDATA ("\n");

close (LMPDATA);
